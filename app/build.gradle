plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

//apply from: "test.gradle"
//apply from: "groovy.gradle"

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.android.work.demoset"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        /*javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }*/
    }

//    sourceSets {
//        main {
//            java {
//                srcDirs = [
//                        'src/main/java',
//                        'src/main/bluetooth'
//                ]
//            }
//        }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.code.gson:gson:2.9.1'
//    implementation project(path: ':aidlmodel')
    implementation project(path: ':network')
    implementation project(path: ':aidlmodel')
    implementation project(path: ':bluetooth')

    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'

    implementation project(path: ':module1')
    implementation project(path: ':module2')

//    implementation project(path: ':apt-processor')
//    kapt project(path: ':apt-processor')
//    implementation project(path: ':apt-annotation')

    kapt 'com.alibaba:arouter-compiler:1.5.2'
}

configurations {
    cleanedAnotations
    implementation.exclude group: 'com.intellij', module: 'annotations'
}

def isTest = hasProperty("isTest")
if (isTest instanceof Boolean && isTest) {
    println("通过 \"./gradlew assembleDebug -P[参数名=值]\" 命令打包，在build.gradle中可以接收，hasProperty([参数名])")
}
